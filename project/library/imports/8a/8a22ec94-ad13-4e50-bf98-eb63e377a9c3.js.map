{"version":3,"sources":["assets\\Script\\STMazeHelper.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import {Singleton} from \"./Singleton\"\r\nimport { MazeData, TILE_TYPE } from \"./MazeData\";\r\nimport Tile from \"./Tile\";\r\n\r\nclass STMazeHelper extends Singleton{\r\n  private _tileSpriteFrame:cc.SpriteFrame = null;\r\n\r\n  public setTileSpriteFrame(sp:cc.SpriteFrame){\r\n    this._tileSpriteFrame = sp;\r\n  }\r\n\r\n  public createTile(pNode:cc.Node, tile:Tile){\r\n    var node = new cc.Node(\"New Sprite\");\r\n    var sprite = node.addComponent(cc.Sprite);\r\n    node.parent = pNode;\r\n    sprite.spriteFrame = this._tileSpriteFrame;\r\n\r\n    this.resetTileColor(node,  tile.getType(), tile.getIsMist());\r\n\r\n    let TILESIZE = MazeData.TILESIZE;\r\n    node.anchorX = 0;\r\n    node.anchorY = 1;\r\n    node.setContentSize(new cc.Size(TILESIZE, TILESIZE));\r\n    node.x = tile.getY() * TILESIZE;\r\n    node.y = -tile.getX()* TILESIZE;\r\n    return node;\r\n  }\r\n  public resetTileColor(node:cc.Node,  type:TILE_TYPE, isMist:boolean){\r\n    let color = null;\r\n\r\n    if(isMist) {\r\n      color = cc.Color.BLACK;\r\n    }else{\r\n      if(type === TILE_TYPE.ROAD) color = cc.Color.WHITE;\r\n      else if(type === TILE_TYPE.WALL) color = cc.Color.BLUE;\r\n      else if(type === TILE_TYPE.PATH) color = cc.Color.RED;\r\n    }\r\n\r\n    node.color = color;\r\n  }\r\n  // 递归完毕, 播放查找的过程.\r\n  playProcess(tileNodes:cc.Node[][], process:Tile[], isSleep:boolean = true){\r\n    let self = this;\r\n\r\n    async function sleep(ms: number) {\r\n      return new Promise((resolve) => {\r\n          setTimeout(() => {\r\n              resolve('');\r\n          }, ms)\r\n      });\r\n    }\r\n\r\n    async function playProcess(){\r\n      for (let i = 0; i < process.length; i++) {\r\n        const tile = process[i];\r\n        let node = tileNodes[tile.getX()][tile.getY()];\r\n        self.resetTileColor(node, tile.getType(), tile.getIsMist());\r\n        if(isSleep)\r\n          await sleep(5)\r\n      }\r\n    }\r\n \r\n    playProcess();\r\n  } \r\n}\r\n\r\nexport { STMazeHelper };"]}